{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","posts","location","site","siteMetadata","title","allMarkdownRemark","edges","className","id","class","map","node","frontmatter","fields","slug","key","href","original","target","src","image","date","description","pageQuery"],"mappings":"2FAAA,kKAqFeA,UA1EG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAEbC,GAFkC,EAAfC,SACPF,EAAKG,KAAKC,aAAaC,MAC3BL,EAAKM,kBAAkBC,OAErC,OACE,oCACE,kBAAC,IAAD,CAAKF,MAAM,YAIX,yBAAKG,UAAU,OAAOC,GAAG,WACzB,kBAAC,IAAD,MACE,yBAAKD,UAAU,cACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,YAAd,kEACA,yBAAKA,UAAU,cAAf,4NAsCN,yBAAKE,MAAM,gBAEVT,EAAMU,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACAP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,6BAASP,UAAU,eAAeQ,IAAKJ,EAAKE,OAAOC,MAC/C,uBAAGE,KAAML,EAAKC,YAAYK,SAAUC,OAAO,UAAS,yBAAKX,UAAU,mBAAmBY,IAAKR,EAAKC,YAAYQ,SAC5G,uBAAGJ,KAAML,EAAKC,YAAYK,SAAUC,OAAO,SAASX,UAAU,yBAC1D,wBAAIE,MAAM,yBAAyBL,EAAnC,OAEJ,yBAAKG,UAAU,gBAAgBI,EAAKC,YAAYS,MAChD,uBAAGZ,MAAM,uBAAuBE,EAAKC,YAAYU,oBAY9D,IAAMC,EAAS","file":"component---src-pages-index-js-a1d5c8ffc797b5660ebb.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Nav from \"../components/nav\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport \"../styles/styles.css\"\nimport \"../styles/cmmchub.css\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <>\n      <SEO title=\"CMMCHub\" />\n\n      \n\n      <div className=\"hero\" id=\"vantajs\">\n      <Nav />\n        <div className=\"intro-text\">\n          <div className=\"div-block\">\n            <h1 className=\"headline\">Our goal is to help you achieve cyber security best practices.</h1>\n            <div className=\"text-block\">CMMC is a huge initiative. We would like to simplify it by providing a community that can collaborate and help each other through it. Check out articles, events, or head over to the forum to join the conversation.</div>\n          </div>\n        </div>\n      </div>\n\n      \n\n      {/*{posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <Link to={node.fields.slug}><img src={node.frontmatter.image}></img></Link>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title} ↗\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n\n          \n        )\n      })} */}\n\n      \n      <div class=\"article-list\">\n\n      {posts.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n              return (\n                <article className=\"article-card\" key={node.fields.slug}>\n                    <a href={node.frontmatter.original} target=\"_blank\"><img className=\"article-card-img\" src={node.frontmatter.image} /></a>\n                    <a href={node.frontmatter.original} target=\"_blank\" className=\"article-card-headline\">\n                        <h1 class=\"article-card-headline\">{title} ↗</h1>\n                    </a>\n                    <div className=\"article-date\">{node.frontmatter.date}</div>\n                    <p class=\"article-description\">{node.frontmatter.description}</p>\n                </article>\n                \n              )\n            })}\n        </div>\n    </>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            image\n            original\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}